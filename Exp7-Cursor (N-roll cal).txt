****PL/SQL block of code using parameterized Cursor***

--create o_rollcall table--
mysql>  create table O_rollcall (rno int(3) primary key, name varchar(20),addr varchar(30));
Query OK, 0 rows affected, 1 warning (0.72 sec)

mysql> insert into O_rollcall values(1,'Vivek','mumbai');
Query OK, 1 row affected (0.11 sec)

mysql> insert into O_rollcall values
	(2,'Mahesh','pune'),
	(3,'Tushar','latur'),
	(4,'Aditya','nagar');
Query OK, 3 rows affected (0.10 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> select * from o_rollcall;
+-----+----------+--------+
| rno | name     | addr   |
+-----+----------+--------+
|   1 | Vivek    | mumbai |
|   2 | Mahesh   | pune   |
|   3 | Tushar   | latur  |
|   4 | Aditya   | nagar  |
+-----+----------+--------+
4 rows in set (0.00 sec)

--create N_rollcall table--
mysql> create table N_rollcall(rno int(3),name varchar(20), addr varchar(30));
Query OK, 0 rows affected, 1 warning (0.10 sec)

mysql> select * from n_rollcall;
Empty set (0.00 sec)

mysql> insert into N_rollcall select * from O_rollcall;
Query OK, 4 rows affected (0.03 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> select * from N_rollcall;
+------+----------+--------+
| rno  | name     | addr   |
+------+----------+--------+
|   1 |  Vivek    | mumbai |
|   2 | Mahesh    | pune   |
|   3 | Tushar    | latur  |
|   4 | Aditya    | nagar  |
+------+----------+--------+
4 rows in set (0.00 sec)

--Delete rows from N_rollcalltable--
mysql> delete from n_rollcall;
Query OK, 4 rows affected (0.10 sec)

mysql> select * from n_rollcall;
Empty set (0.00 sec)


*** Simple procedure to insert rows in N_rollcall from O_rollcall if it is not exist in N_rollcall
***
mysql>
mysql> delimiter ##
mysql> CREATE PROCEDURE new1(IN rno1 int(3))
     BEGIN
     If not exists (select * from N_rollcall where rno=rno1) then
     insert into N_rollcall
     select * from O_rollcall
     where rno=rno1;
     End If;
     END
     ##
Query OK, 0 rows affected, 1 warning (0.05 sec)

mysql> call new1(1)##
Query OK, 1 row affected (0.04 sec)

mysql> call new1(3)##
Query OK, 1 row affected (0.02 sec)

mysql> select * from n_rollcall##
+------+----------+--------+
| rno  | name     | addr   |
+------+----------+--------+
|    1 | Vivek    | mumbai |
|    3 | Tushar   | latur  |
+------+----------+--------+
2 rows in set (0.00 sec)


*** Simple procedure with Parameterized cursor to insert rows in N_rollcallfrom O_rollcallif that rno is not exist in N_rollcall***

mysql> CREATE PROCEDURE newcur(IN rno1 int(3))
     BEGIN
     DECLARE c1 CURSOR FOR SELECT rno FROM O_rollcall where rno=rno1;
     OPEN c1;
     FETCH c1 INTO rno1;
     If not exists(select * from N_rollcall where rno=rno1) then
     insert into N_rollcall select * from O_rollcall where rno=rno1;
     End If;
     CLOSE c1;
     end##
Query OK, 0 rows affected, 1 warning (0.03 sec)

mysql> select * from n_rollcall##
+------+----------+--------+
| rno  | name     | addr   |
+------+----------+--------+
|    1 | Vivek    | mumbai |
|    3 | Tushar   | latur  |
+------+----------+--------+
2 rows in set (0.00 sec)

mysql> call newcur(4)##
Query OK, 1 row affected (0.11 sec)

mysql> select * from n_rollcall##
+------+----------+--------+
| rno  | name     | addr   |
+------+----------+--------+
|    1 | Vivek    | mumbai |
|    3 | Tushar   | latur  |
|    4 | Aditya   | nagar  |
+------+----------+--------+
3 rows in set (0.00 sec)

***Parameterized cursor to insert rows in N_rollcallfrom O_rollcall if rno> given rno1 is not exist in N_rollcall***

mysql> delete from n_rollcall##
Query OK, 3 rows affected (0.11 sec)

mysql> select * from n_rollcall##
Empty set (0.00 sec)

-----------------------------------
mysql> CREATE PROCEDURE newcur1(IN rno1 int(3))
     BEGIN
     DECLARE rno2 int(3);
     DECLARE exit_loop BOOLEAN;
     DECLARE c1 CURSOR FOR SELECT rno FROM O_rollcall where rno>rno1;
     DECLARE CONTINUE HANDLER FOR NOT FOUND SET exit_loop = TRUE;
     OPEN c1;
     emp_loop: LOOP
     FETCH c1 INTO rno2;
     If not exists(select * from N_rollcall where rno=rno2) then
     insert into N_rollcall select * from O_rollcall where rno=rno2;
     End If;
     IF exit_loop THEN
     CLOSE c1;
     LEAVE emp_loop;
     END IF;
     END LOOP emp_loop;
     END
     ##
Query OK, 0 rows affected, 2 warnings (0.11 sec)

mysql> call newcur1(1)##
Query OK, 0 rows affected (0.17 sec)

mysql> select * from n_rollcall##
+------+--------+--------+
| rno  | name   | addr   |
+------+--------+--------+
|    2 | Mahesh | pune   |
|    3 | Tushar | latur  |
|    4 | Aditya | nagar  |
+------+--------+--------+
3 rows in set (0.00 sec)


***cursor to insert rows in N_rollcallfrom O_rollcall if that rno is not exist in N_rollcall***

mysql>
mysql> CREATE PROCEDURE newcur2()
     BEGIN
     DECLARE rno1 int(3);
     DECLARE exit_loop BOOLEAN;
     DECLARE c1 CURSOR FOR SELECT rno FROM O_rollcall ;
     DECLARE CONTINUE HANDLER FOR NOT FOUND SET exit_loop = TRUE;
     OPEN c1;
     emp_loop: LOOP
     FETCH c1 INTO rno1;
     If not exists(select * from N_rollcall where rno=rno1) then
     insert into N_rollcall select * from O_rollcall where rno=rno1;
     End If;
     IF exit_loop THEN
     CLOSE c1;
     LEAVE emp_loop;
     END IF;
     END LOOP emp_loop;
     END##
Query OK, 0 rows affected, 1 warning (0.14 sec)

mysql> SELECT * FROM N_ROLLCALL##
+------+--------+--------+
| rno  | name   | addr   |
+------+--------+--------+
|    2 | Mahesh | pune   |
|    3 | Tushar | latur  |
|    4 | Aditya | nagar  |
+------+--------+--------+
3 rows in set (0.00 sec)

-----------After call---------------
mysql>
mysql> call newcur2()##
Query OK, 0 rows affected (0.11 sec)

mysql> select * from n_rollcall##
+------+----------+--------+
| rno  | name     | addr   |
+------+----------+--------+
|    2 | Mahesh   | pune   |
|    3 | Tushar   | latur  |
|    4 | Aditya   | nagar  |
|    1 | Vivek    | mumbai |
+------+----------+--------+
4 rows in set (0.00 sec)